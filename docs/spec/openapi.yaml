openapi: 3.0.3
info:
  title: Ollama API
  description: API for interacting with Ollama, an AI model management and inference system
  version: 1.0.0

servers:
  - url: http://localhost:11434/api
    description: Default local Ollama server

paths:
  /generate:
    post:
      summary: Generate text completion
      description: Generate a text completion based on a prompt using the specified model
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateRequest'
      responses:
        '200':
          description: Successful generation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /chat:
    post:
      summary: Chat with a model
      description: Send a chat message and receive a response from the specified model
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
      responses:
        '200':
          description: Successful chat response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /embeddings:
    post:
      summary: Generate embeddings
      description: Generate embeddings for the given prompt using the specified model
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EmbeddingsRequest'
      responses:
        '200':
          description: Successful embeddings generation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmbeddingsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /tags:
    get:
      summary: List available models
      description: Get a list of available model tags
      responses:
        '200':
          description: List of available models
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagsResponse'

  /show:
    post:
      summary: Show model information
      description: Get detailed information about a specific model
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShowRequest'
      responses:
        '200':
          description: Model information
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShowResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /create:
    post:
      summary: Create a new model
      description: Create a new model from a model file
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateRequest'
      responses:
        '200':
          description: Model created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /copy:
    post:
      summary: Copy a model
      description: Copy a model to a new name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyRequest'
      responses:
        '200':
          description: Model copied successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /delete:
    delete:
      summary: Delete a model
      description: Delete a specific model
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteRequest'
      responses:
        '200':
          description: Model deleted successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /pull:
    post:
      summary: Pull a model
      description: Pull a model from the model registry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequest'
      responses:
        '200':
          description: Model pulled successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PullResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /push:
    post:
      summary: Push a model
      description: Push a model to the model registry
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PushRequest'
      responses:
        '200':
          description: Model pushed successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PushResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /blobs/{digest}:
    post:
      summary: Register model file blob
      description: Register a model file blob with the given digest
      parameters:
        - name: digest
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/octet-stream:
            schema:
              type: string
              format: binary
      responses:
        '200':
          description: Blob registered successfully
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    GenerateRequest:
      type: object
      required:
        - model
        - prompt
      properties:
        model:
          type: string
          description: Name of the model to use
        prompt:
          type: string
          description: The prompt to generate completion for
        format:
          type: string
          enum: [json]
          description: Format of the response
        options:
          type: object
          description: Additional model parameters
        system:
          type: string
          description: System prompt
        template:
          type: string
          description: Custom prompt template
        context:
          type: array
          items:
            type: integer
          description: Previous context for continuation
        stream:
          type: boolean
          description: Whether to stream the response
        raw:
          type: boolean
          description: Whether to return raw response
        keep_alive:
          type: string
          description: Duration to keep model loaded

    GenerateResponse:
      type: object
      properties:
        model:
          type: string
        created_at:
          type: string
          format: datetime
        response:
          type: string
        done:
          type: boolean
        done_reason:
          type: string
          description: Reason generation completed
        context:
          type: array
          items:
            type: integer
        total_duration:
          type: integer
        load_duration:
          type: integer
        prompt_eval_count:
          type: integer
        prompt_eval_duration:
          type: integer
        eval_count:
          type: integer
        eval_duration:
          type: integer

    ChatRequest:
      type: object
      required:
        - model
        - messages
      properties:
        model:
          type: string
        messages:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        format:
          type: string
          enum: [json]
        options:
          type: object
        stream:
          type: boolean
        keep_alive:
          type: string
          description: Duration to keep model loaded

    Message:
      type: object
      required:
        - role
        - content
      properties:
        role:
          type: string
          enum: [user, assistant, system]
        content:
          type: string
        images:
          type: array
          items:
            type: string
            format: base64
        tool_calls:
          type: array
          items:
            type: object
            properties:
              function:
                type: object
                properties:
                  name:
                    type: string
                  arguments:
                    type: object

    ChatResponse:
      type: object
      properties:
        model:
          type: string
        created_at:
          type: string
          format: datetime
        message:
          $ref: '#/components/schemas/Message'
        done:
          type: boolean
        done_reason:
          type: string
          description: Reason generation completed
        total_duration:
          type: integer
        load_duration:
          type: integer
        prompt_eval_count:
          type: integer
        prompt_eval_duration:
          type: integer
        eval_count:
          type: integer
        eval_duration:
          type: integer

    EmbeddingsRequest:
      type: object
      required:
        - model
        - prompt
      properties:
        model:
          type: string
        prompt:
          type: string
        options:
          type: object
        keep_alive:
          type: string
          description: Duration to keep model loaded

    EmbeddingsResponse:
      type: object
      properties:
        embedding:
          type: array
          items:
            type: number

    TagsResponse:
      type: object
      properties:
        models:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              modified_at:
                type: string
                format: datetime
              size:
                type: integer
              digest:
                type: string
              details:
                type: object
                properties:
                  family:
                    type: string
                  families:
                    type: array
                    items:
                      type: string
                  parameter_count:
                    type: integer
                  quantization_level:
                    type: string

    ShowRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string

    ShowResponse:
      type: object
      properties:
        license:
          type: string
        modelfile:
          type: string
        parameters:
          type: string
        template:
          type: string
        parent_model:
          type: string
        format:
          type: string
        details:
          type: object
          properties:
            family:
              type: string
            families:
              type: array
              items:
                type: string
            parameter_count:
              type: integer
            quantization_level:
              type: string

    CreateRequest:
      type: object
      required:
        - name
        - modelfile
      properties:
        name:
          type: string
          description: Name of the model to create
        modelfile:
          type: string
          description: Model file contents
        stream:
          type: boolean
          description: Whether to stream the response

    CreateResponse:
      type: object
      properties:
        status:
          type: string
          description: Status of model creation

    CopyRequest:
      type: object
      required:
        - source
        - destination
      properties:
        source:
          type: string
        destination:
          type: string

    DeleteRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string

    PullRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        insecure:
          type: boolean
        stream:
          type: boolean

    PullResponse:
      type: object
      properties:
        status:
          type: string
        digest:
          type: string
        total:
          type: integer
        completed:
          type: integer

    PushRequest:
      type: object
      required:
        - name
      properties:
        name:
          type: string
        insecure:
          type: boolean
        stream:
          type: boolean

    PushResponse:
      type: object
      properties:
        status:
          type: string
        digest:
          type: string
        total:
          type: integer
        completed:
          type: integer

    Error:
      type: object
      properties:
        error:
          type: string